Enter password: *****
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 37
Server version: 5.5.62 MySQL Community Server (GPL)

Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> use simats;
Database changed
mysql> delimiter //
mysql> create function customer(cre_lim int)
    -> returns varchar(20)
    -> deterministic
    -> begin
    ->   declare customer_level varchar(20);
    ->   set customer_level='';
    -> if cre_lim >50000 then
    ->   set customer_level='platinum';
    -> elseif cre_lim <=50000 and cre_lim>=10000 then
    ->   set customer_level='gold';
    -> elseif cre_lim < 10000 then
    ->   set customer_level='silver';
    -> end if;
    -> return customer_level;
    -> end //
Query OK, 0 rows affected (0.01 sec)

mysql> select customer(40000);
    -> //
+-----------------+
| customer(40000) |
+-----------------+
| gold            |
+-----------------+
1 row in set (0.00 sec)

mysql> select customer(50000);
    -> //
+-----------------+
| customer(50000) |
+-----------------+
| gold            |
+-----------------+
1 row in set (0.00 sec)

mysql> select customer(550000);
    -> //
+------------------+
| customer(550000) |
+------------------+
| platinum         |
+------------------+
1 row in set (0.00 sec)

mysql> select customer(1000);
    -> //
+----------------+
| customer(1000) |
+----------------+
| silver         |
+----------------+
1 row in set (0.00 sec)

mysql> delimiter $$
mysql> create procedure find_fact(in n int)
    -> begin
    -> set @@global.max_sp_recursion_depth=255;
    -> set @@session.max_sp_recursion_depth=255;
    -> call factorial(n,@fact);
    -> select @fact;
    -> end
    -> $$
Query OK, 0 rows affected (0.00 sec)


mysql> DELIMITER $$
mysql> CREATE PROCEDURE factorial(IN n INT,OUT fact INT)
    -> BEGIN
    -> IF n=1 THEN
    -> SET fact:=1;
    -> ELSE
    -> CALL factorial(n-1,fact);
    -> SET fact:=n* fact;
    -> END IF;
    -> END
    -> $$
Query OK, 0 rows affected (0.01 sec)

mysql> call find_fact(5);
    -> $$
+-------+
| @fact |
+-------+
|   120 |
+-------+
1 row in set (0.01 sec)

Query OK, 0 rows affected (0.01 sec)

mysql> DELIMITER //
mysql> CREATE FUNCTION find_sum1(A INT,B INT)
    -> RETURNS INT
    -> DETERMINISTIC
    -> BEGIN
    -> DECLARE SUM INT;
    -> SET SUM=A+B;
    -> RETURN SUM;
    -> END //
Query OK, 0 rows affected (0.00 sec)

mysql> SELECT find_sum1(4,7);
    -> //
+----------------+
| find_sum1(4,7) |
+----------------+
|             11 |
+----------------+
1 row in set (0.00 sec)

mysql> SELECT find_sum1(-2,-9);
    -> //
+------------------+
| find_sum1(-2,-9) |
+------------------+
|              -11 |
+------------------+
1 row in set (0.01 sec)

